---
name: <%= director_name %>
uuid: deadbeef
runtime:
  ip: 127.1.127.1
  instance: some-name/some-id

port: <%= director_ruby_port %>

mbus: nats://127.0.0.1:<%= nats_port %>

logging:
  level: DEBUG

dir: <%= sandbox_root %>/boshdir

scheduled_jobs:
  - command: SnapshotDeployments
    schedule: '*/10 * * * * *'
  - command: ScheduledBackup
    schedule: '*/10 * * * * *'
  - command: ScheduledOrphanedVMCleanup
    schedule: '*/10 * * * * *'

db: &bosh_db
  adapter: <%= database.adapter %>
  database: <%= database.db_name %>
  # Settings are set to defaults since DbBackup
  # currently does not support export without them
  host: 127.0.0.1
  port: <%= database.port %>
  user: <%= database.username %>
  password: <%= database.password %>

  <% if database.tls_enabled %>
  tls:
    enabled: <%= database.tls_enabled %>
    cert:
      ca: <%= database.ca_path %>
      certificate: "/not-used/path/in/integration/tests"
      private_key: "/not-used/path/in/integration/tests"
    bosh_internal:
      ca_provided: true
      mutual_tls_enabled: false

  <% else %>
  # Failure to set `sslmode` will produce following error
  # 'PG::Error: SSL error: decryption failed or bad record mac:'
  sslmode: "disable"
  <% end %>

  connection_options:
    max_connections: 32
    pool_timeout: 10
    reconnect: <%= database.adapter == 'mysql2' ? true : false %>

<% if dns_enabled %>
dns:
  db: *bosh_db
<% end %>

trusted_certs: <%= trusted_certs %>

local_dns:
  enabled: <%= local_dns['enabled'] %>
  include_index: <%= local_dns['include_index'] %>
  use_dns_addresses: <%= local_dns['use_dns_addresses'] %>

verify_multidigest_path: <%= verify_multidigest_path %>

version: '0.0.0'

blobstore: &director_blobstore
  provider: local
  options:
    blobstore_path: <%= blobstore_storage_dir %>

backup_destination:
  provider: local
  options:
    blobstore_path: <%= sandbox_root %>/backup_destination

compiled_package_cache:
  <<: *director_blobstore

scan_and_fix:
  auto_fix_stateful_nodes: <%= director_fix_stateful_nodes || false %>

snapshots:
  enabled: true

flush_arp: true

cloud:
  provider:
    name: <%= external_cpi_config[:name] %>
    path: <%= external_cpi_config[:job_path] %>
  properties:
    dir: <%= cloud_storage_dir %>
    agent:
      blobstore:
        <<: *director_blobstore

user_management:
  provider: <%= user_authentication %>
  <% if user_authentication == 'uaa' %>
  uaa:
    symmetric_key: uaa-secret-key
    # matches public key in asymmetric/uaa.yml
    public_key: |
      -----BEGIN PUBLIC KEY-----
      MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC/85WUjM7WKxnSMkd/TtGo+WWX
      kI5pH8ACBtb5oameiMJIw/wZ+dtyIwU+NZ0mKua+IzpGL1++bLJL0fDxE1LpD88j
      WzjaaTp8930UyY23oMxSa6JMG6OpDW469VTkY1g3uE/RAFtg7J9ZnDrTrMFJrduV
      VRs5sM3o4r1UYUTD6wIDAQAB
      -----END PUBLIC KEY-----
    url: <%= uaa_url %>
  <% else %>
  local:
    <% if users_in_manifest %>
    users:
    - {name: test, password: test}
    - {name: hm, password: pass}
    <% end %>
  <% end %>

enable_post_deploy: <%= enable_post_deploy %>
enable_nats_delivered_templates: <%= enable_nats_delivered_templates %>
enable_cpi_resize_disk: <%= enable_cpi_resize_disk %>
default_update_vm_strategy: <%= default_update_vm_strategy %>

<% if config_server_enabled %>
config_server:
  enabled: true
  url: <%= config_server_url %>
  ca_cert: |
    -----BEGIN CERTIFICATE-----
    MIICtDCCAZwCCQDNTlucloQBEzANBgkqhkiG9w0BAQsFADAcMRowGAYDVQQDDBFj
    cmVkaHViX3NlcnZlcl9jYTAeFw0xODA3MDkxODE0MDBaFw0xOTA3MDkxODE0MDBa
    MBwxGjAYBgNVBAMMEWNyZWRodWJfc2VydmVyX2NhMIIBIjANBgkqhkiG9w0BAQEF
    AAOCAQ8AMIIBCgKCAQEAoY6iyxeh5hxhEF3v+V8/j48Gn0JVVRc1BcVJ6hUocOU+
    6sGNHy1dM+VN6aZOKRawZ9cfWcMYxs9/vPNymy4QSpWdyt1PSo+D6aCallDUCVE8
    TO8U6Ni1ZU+da6BjiqX/Yc0yKjAc7GEZ1lpkWABxDRejHGknwtkbLje2jdis+prG
    BTY/gasFLopBUBSCpcYyvpSVaPGx20FJJosD1Uyu3wnou+jgmO3QxpvKUoO2uAbJ
    ACQzmja6ch3YvRr/FUjqB6EWJJrGvE1LFqPilpeQYYvmmQjUx2TfQvJWEVE9l7no
    04u5y62Kw/AIySbYkT6QkKpGS/ZDsNm1uQKtu4/VoQIDAQABMA0GCSqGSIb3DQEB
    CwUAA4IBAQCIzUdPemHHGmL8li30edXBq3T2nXFqatXs3SLMUTdoRJn2y+IB8Sws
    JXx3NIUnt5iu4w6ckWoWn9RMbiajAkqxGemVUhYxP2VBlvHg4gWjKeW49altA0PM
    qXh4yUm65jqMHqCGI09AgItng2hQqPAy1uBNqA9ACLGzV8NHGbEhoymQrEMHevje
    SRPNv1bbkZcCqlT9WK2yYXv83vD88toZwC4E/WogEpeXcHLVIXkS0pi3ZgX54WmO
    MWPs2kj2htVTq4CERK9Rl+ZEdKWtBDMSm0VdYimkKZFYhFuFnN42H9PdsDO9DRHh
    D9fkKFDYOE22TvXD1UomJWjfJKqw/xc9
    -----END CERTIFICATE-----
  ca_cert_path: <%= config_server_cert_path %>

  uaa:
    url: <%= config_server_uaa_url %>
    client_id: <%= config_server_uaa_client_id %>
    client_secret: <%= config_server_uaa_client_secret %>
    ca_cert_path: <%= config_server_uaa_ca_cert_path %>

<% else %>
config_server:
  enabled: false
<% end %>

generate_vm_passwords: <%= generate_vm_passwords %>

remove_dev_tools: <%= remove_dev_tools %>

record_events: true

director_ips: <%= director_ips %>

nats:
  server_ca_path: <%= nats_server_ca_path %>
  client_certificate_path: <%= nats_director_tls['certificate_path'] %>
  client_private_key_path: <%= nats_director_tls['private_key_path'] %>
  client_ca_certificate_path: <%= nats_client_ca_certificate_path %>
  client_ca_private_key_path: <%= nats_client_ca_private_key_path %>

agent:
  agent_wait_timeout: <%= agent_wait_timeout %>
  env:
    bosh:
      dummy_agent_key_merged: "This key must be sent to agent"

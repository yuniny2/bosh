scim:
  users:
    - marissa|koala|marissa@test.org|Marissa|Bloggs|bosh.admin
    - non-admin|password|marissa@test.org|Marissa|Bloggs|uaa.user
    - credhub|password|credhub|Credhub|User|credhub.read,credhub.write
  userids_enabled: true

oauth:
  client:
    override: true
    autoapprove:
      - bosh_cli
  clients:
    bosh_cli:
      id: bosh_cli
      override: true
      authorized-grant-types: implicit,password,refresh_token
      scope: openid,bosh.admin
      authorities: uaa.none
      secret: ""
    test:
      id: test
      override: true
      authorized-grant-types: client_credentials
      scope: openid
      authorities: bosh.admin
      secret: "secret"
    short-lived-client:
      id: short-lived-client
      override: true
      authorized-grant-types: client_credentials
      scope: openid
      authorities: bosh.admin
      secret: "short-lived-secret"
    team-client:
      id: team-client
      override: true
      authorized-grant-types: client_credentials
      scope: openid
      authorities: bosh.teams.ateam.admin
      secret: "team-secret"
    team-client-read-access:
      id: team-client-read-access
      override: true
      authorized-grant-types: client_credentials
      scope: openid
      authorities: bosh.teams.ateam.read
      secret: "team-secret"
    upload-stemcells-access:
      id: upload-stemcells-access
      override: true
      authorized-grant-types: client_credentials
      scope: openid
      authorities: bosh.stemcells.upload,bosh.read
      secret: "stemcells-secret"
    upload-releases-access:
      id: upload-releases-access
      override: true
      authorized-grant-types: client_credentials
      scope: openid
      authorities: bosh.releases.upload,bosh.read
      secret: "releases-secret"
    no-access:
      id: no-access
      override: true
      authorized-grant-types: client_credentials
      scope: openid
      authorities: uaa.none
      secret: "secret"
    read-access:
      id: read-access
      override: true
      authorized-grant-types: client_credentials
      scope: openid
      authorities: bosh.read
      secret: "secret"
    director-access:
      id: director-access
      override: true
      authorized-grant-types: client_credentials
      scope: openid
      authorities: bosh.deadbeef.admin
      secret: "secret"
    hm:
      id: hm
      override: true
      authorized-grant-types: client_credentials
      scope: openid
      authorities: uaa.none,bosh.admin
      secret: "secret"
    production_team:
      id: production_team
      override: true
      authorized-grant-types: client_credentials
      scope: openid
      authorities: bosh.teams.production_team.admin
      secret: "secret"
    dev_team:
      id: dev_team
      override: true
      authorized-grant-types: client_credentials
      scope: openid
      authorities: bosh.teams.dev_team.admin
      secret: "secret"
    credhub_cli:
      override: true
      authorized-grant-types: password,refresh_token
      # scopes the client may receive
      scope: credhub.read,credhub.write
      authorities: uaa.resource
      # access-token-validity: 86400 # 1 day
      # refresh-token-validity: 172800 # re-login required every other day
      secret: "" # CLI expects this secret to be empty
    credhub_client:
      override: true
      authorized-grant-types: client_credentials
      secret: secret
      scope: uaa.none
      authorities: credhub.read,credhub.write
      # access-token-validity: 86400 # 1 day
jwt:
  token:
    signing-key: "uaa-secret-key"
    verification-key: "uaa-secret-key"
require_https: false
